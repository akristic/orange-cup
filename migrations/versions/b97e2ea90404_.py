"""empty message

Revision ID: b97e2ea90404
Revises: 
Create Date: 2020-04-23 15:39:58.339560

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b97e2ea90404'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('settings')
    op.drop_table('matches')
    op.drop_table('players')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('players',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('players_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nationality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='players_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('matches',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player_1_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_2_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_3_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('player_4_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('matchfile', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('settings_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('finish_state', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['player_1_id'], ['players.id'], name='matches_player_1_id_fkey'),
    sa.ForeignKeyConstraint(['player_2_id'], ['players.id'], name='matches_player_2_id_fkey'),
    sa.ForeignKeyConstraint(['player_3_id'], ['players.id'], name='matches_player_3_id_fkey'),
    sa.ForeignKeyConstraint(['player_4_id'], ['players.id'], name='matches_player_4_id_fkey'),
    sa.ForeignKeyConstraint(['settings_id'], ['settings.id'], name='matches_settings_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='matches_pkey')
    )
    op.create_table('settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('number_of_gamest_to_win', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('number_of_sets_to_win', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('advantage', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tiebreak', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('points_in_tiebreak', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('play_last_set_as_tiebreak', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('serve_locked', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tiebreak_difference', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='settings_pkey')
    )
    # ### end Alembic commands ###
